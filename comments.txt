index.js

Створюється новий об'єкт програми за допомогою new Command(). Цей об'єкт представляє собою
розпорядник (commander) для обробки командного рядка.
Визначаються опції (параметри командного рядка) за допомогою методів .option(). 
Для кожної опції вказується коротка та довга назва, а також опис параметра.
Виконується розбір аргументів командного рядка за допомогою program.parse(process.argv). 
Ця команда розбирає аргументи командного рядка, які були передані програмі, використовуючи 
правила, визначені раніше за допомогою .option().
Отримані аргументи командного рядка доступні у змінній argv, яка отримується за допомогою 
program.opts().
Визначається функція invokeAction, яка отримує об'єкт argv (з аргументами командного рядка)
і в залежності від значення опції action виконує відповідну дію. Наприклад, якщо 
значення action - "list", то виводиться список контактів. Якщо action - "get", то 
виводиться інформація про контакт за вказаним id, і так далі.
В останньому рядку викликається функція invokeAction з об'єктом argv для обробки аргументів
командного рядка і виконання відповідних дій.
Функції listContacts, getContactById, addContact та removeContact використовуються 
для роботи з контактами та викликаються залежно від обраної дії.  А отже, 
користувач може викликати програму з аргументами командного рядка, такими як -a list 
або -a add -n John -e john@example.com -p 1234567890, де -a вказує на дію, а -n, -e і -p 
вказують на ім'я, електронну пошту та номер телефону користувача.

contacts.js

Цей код представляє собою модуль Node.js для роботи з контактами. Він використовує модулі 
fs, path та crypto для зберігання, читання та взаємодії з контактами в форматі JSON у 
файлі contacts.json. Основні функції, які цей модуль виконує, включають такі:
writeContacts(contacts): Ця асинхронна функція приймає масив об'єктів контактів та 
записує цей масив у файл contacts.json у форматі JSON зі зрозумілою для людини розміткою 
(із використанням методу fs.writeFile). Вона оновлює дані контактів у файлі.
listContacts(): Ця асинхронна функція читає файл contacts.json і повертає його вміст у 
вигляді масиву об'єктів JSON (з використанням методу fs.readFile та JSON.parse). Фактично, 
вона повертає список всіх контактів.
getContactById(contactId): Ця асинхронна функція приймає ідентифікатор контакта і повертає 
відповідний об'єкт контакта за його ідентифікатором. Вона використовує listContacts() для
отримання всього списку контактів, а потім шукає контакт з вказаним ідентифікатором.
removeContact(contactId): Ця асинхронна функція приймає ідентифікатор контакта і видаляє 
контакт зі списку за цим ідентифікатором. Вона також використовує listContacts() для 
отримання списку всіх контактів, знаходить і видаляє контакт за ідентифікатором, а потім 
оновлює файл contacts.json за допомогою writeContacts() з оновленим списком контактів.
addContact(name, email, phone): Ця асинхронна функція приймає дані для нового контакту 
(ім'я, електронну пошту та номер телефону), створює новий об'єкт контакту з унікальним 
ідентифікатором, додає цей контакт до списку, оновлює файл contacts.json і повертає 
створений контакт.
Завершується модуль експортом функцій listContacts, getContactById, removeContact та 
addContact, щоб їх можна було імпортувати та використовувати в інших частинах програми 
для роботи з контактами.